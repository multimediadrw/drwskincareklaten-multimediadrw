generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bahan_aktif {
  id                 Int                  @id @default(autoincrement())
  nama_bahan         String               @unique @db.VarChar(100)
  produk_bahan_aktif produk_bahan_aktif[]
}

model foto_produk {
  id_foto      BigInt        @id @default(autoincrement())
  produk_id    BigInt?
  url_foto     String
  alt_text     String?       @db.VarChar(255)
  urutan       Int           @default(0)
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  paket_id     BigInt?
  paket_produk paket_produk? @relation(fields: [paket_id], references: [id_paket], onDelete: Cascade, onUpdate: NoAction, map: "fk_paket")
  produk       produk?       @relation(fields: [produk_id], references: [id_produk], onDelete: Cascade, onUpdate: NoAction, map: "fk_produk")
}

model kategori {
  id              Int               @id @default(autoincrement())
  nama_kategori   String            @unique @db.VarChar(100)
  deskripsi       String?
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  paket_kategori  paket_kategori[]
  produk_kategori produk_kategori[]
}

model paket_isi {
  paket_id     BigInt
  produk_id    BigInt
  jumlah       Int          @default(1)
  paket_produk paket_produk @relation(fields: [paket_id], references: [id_paket], onDelete: Cascade, onUpdate: NoAction)
  produk       produk       @relation(fields: [produk_id], references: [id_produk], onDelete: Cascade, onUpdate: NoAction)

  @@id([paket_id, produk_id])
}

model paket_kategori {
  paket_id     BigInt
  kategori_id  Int
  kategori     kategori     @relation(fields: [kategori_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  paket_produk paket_produk @relation(fields: [paket_id], references: [id_paket], onDelete: Cascade, onUpdate: NoAction)

  @@id([paket_id, kategori_id])
}

model paket_produk {
  id_paket         BigInt           @id
  nama_paket       String           @db.VarChar(255)
  slug             String?          @unique @db.VarChar(255)
  deskripsi        String?
  foto_utama       String?
  harga_director   Int              @default(0)
  harga_manager    Int              @default(0)
  harga_supervisor Int              @default(0)
  harga_consultant Int              @default(0)
  harga_umum       Int              @default(0)
  created_at       DateTime         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime         @default(now()) @db.Timestamptz(6)
  foto_produk      foto_produk[]
  paket_isi        paket_isi[]
  paket_kategori   paket_kategori[]
}

model produk {
  id_produk          BigInt               @id
  nama_produk        String               @db.VarChar(255)
  bpom               String?              @db.VarChar(20)
  harga_director     Int                  @default(0)
  harga_manager      Int                  @default(0)
  harga_supervisor   Int                  @default(0)
  harga_consultant   Int                  @default(0)
  harga_umum         Int                  @default(0)
  foto_utama         String?
  deskripsi_singkat  String?
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime             @default(now()) @db.Timestamptz(6)
  slug               String?              @unique @db.VarChar(255)
  foto_produk        foto_produk[]
  paket_isi          paket_isi[]
  produk_bahan_aktif produk_bahan_aktif[]
  produk_detail      produk_detail?
  produk_kategori    produk_kategori[]
}

model produk_bahan_aktif {
  produk_id   BigInt
  bahan_id    Int
  fungsi      String?     @db.VarChar(100)
  bahan_aktif bahan_aktif @relation(fields: [bahan_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  produk      produk      @relation(fields: [produk_id], references: [id_produk], onDelete: Cascade, onUpdate: NoAction)

  @@id([produk_id, bahan_id])
}

model produk_detail {
  produk_id  BigInt  @id
  kegunaan   String?
  komposisi  String?
  cara_pakai String?
  netto      String? @db.VarChar(50)
  no_bpom    String? @db.VarChar(30)
  produk     produk  @relation(fields: [produk_id], references: [id_produk], onDelete: Cascade, onUpdate: NoAction, map: "fk_produk")
}

model produk_kategori {
  produk_id   BigInt
  kategori_id Int
  kategori    kategori @relation(fields: [kategori_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  produk      produk   @relation(fields: [produk_id], references: [id_produk], onDelete: Cascade, onUpdate: NoAction)

  @@id([produk_id, kategori_id])
}
